// Generated by view binder compiler. Do not edit!
package com.example.carbontracer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carbontracer.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnSignup;

  @NonNull
  public final CardView cardViewForm;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etFullName;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final ImageView ivDigitMet;

  @NonNull
  public final ImageView ivLengthMet;

  @NonNull
  public final ImageView ivSpecialMet;

  @NonNull
  public final ImageView ivUppercaseMet;

  @NonNull
  public final LinearLayout linearLayoutForm;

  @NonNull
  public final LinearLayout llPasswordRequirements;

  @NonNull
  public final ProgressBar progressBarSignUp;

  @NonNull
  public final TextInputLayout tilConfirmPassword;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextView tvLoginRedirect;

  @NonNull
  public final TextView tvTitle;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnSignup, @NonNull CardView cardViewForm,
      @NonNull TextInputEditText etConfirmPassword, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etFullName, @NonNull TextInputEditText etPassword,
      @NonNull ImageView ivDigitMet, @NonNull ImageView ivLengthMet,
      @NonNull ImageView ivSpecialMet, @NonNull ImageView ivUppercaseMet,
      @NonNull LinearLayout linearLayoutForm, @NonNull LinearLayout llPasswordRequirements,
      @NonNull ProgressBar progressBarSignUp, @NonNull TextInputLayout tilConfirmPassword,
      @NonNull TextInputLayout tilPassword, @NonNull TextView tvLoginRedirect,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnSignup = btnSignup;
    this.cardViewForm = cardViewForm;
    this.etConfirmPassword = etConfirmPassword;
    this.etEmail = etEmail;
    this.etFullName = etFullName;
    this.etPassword = etPassword;
    this.ivDigitMet = ivDigitMet;
    this.ivLengthMet = ivLengthMet;
    this.ivSpecialMet = ivSpecialMet;
    this.ivUppercaseMet = ivUppercaseMet;
    this.linearLayoutForm = linearLayoutForm;
    this.llPasswordRequirements = llPasswordRequirements;
    this.progressBarSignUp = progressBarSignUp;
    this.tilConfirmPassword = tilConfirmPassword;
    this.tilPassword = tilPassword;
    this.tvLoginRedirect = tvLoginRedirect;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSignup;
      MaterialButton btnSignup = ViewBindings.findChildViewById(rootView, id);
      if (btnSignup == null) {
        break missingId;
      }

      id = R.id.cardViewForm;
      CardView cardViewForm = ViewBindings.findChildViewById(rootView, id);
      if (cardViewForm == null) {
        break missingId;
      }

      id = R.id.etConfirmPassword;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.etEmail;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etFullName;
      TextInputEditText etFullName = ViewBindings.findChildViewById(rootView, id);
      if (etFullName == null) {
        break missingId;
      }

      id = R.id.etPassword;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.ivDigitMet;
      ImageView ivDigitMet = ViewBindings.findChildViewById(rootView, id);
      if (ivDigitMet == null) {
        break missingId;
      }

      id = R.id.ivLengthMet;
      ImageView ivLengthMet = ViewBindings.findChildViewById(rootView, id);
      if (ivLengthMet == null) {
        break missingId;
      }

      id = R.id.ivSpecialMet;
      ImageView ivSpecialMet = ViewBindings.findChildViewById(rootView, id);
      if (ivSpecialMet == null) {
        break missingId;
      }

      id = R.id.ivUppercaseMet;
      ImageView ivUppercaseMet = ViewBindings.findChildViewById(rootView, id);
      if (ivUppercaseMet == null) {
        break missingId;
      }

      id = R.id.linearLayoutForm;
      LinearLayout linearLayoutForm = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutForm == null) {
        break missingId;
      }

      id = R.id.llPasswordRequirements;
      LinearLayout llPasswordRequirements = ViewBindings.findChildViewById(rootView, id);
      if (llPasswordRequirements == null) {
        break missingId;
      }

      id = R.id.progressBarSignUp;
      ProgressBar progressBarSignUp = ViewBindings.findChildViewById(rootView, id);
      if (progressBarSignUp == null) {
        break missingId;
      }

      id = R.id.tilConfirmPassword;
      TextInputLayout tilConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmPassword == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tvLoginRedirect;
      TextView tvLoginRedirect = ViewBindings.findChildViewById(rootView, id);
      if (tvLoginRedirect == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, btnSignup, cardViewForm,
          etConfirmPassword, etEmail, etFullName, etPassword, ivDigitMet, ivLengthMet, ivSpecialMet,
          ivUppercaseMet, linearLayoutForm, llPasswordRequirements, progressBarSignUp,
          tilConfirmPassword, tilPassword, tvLoginRedirect, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
